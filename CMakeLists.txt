CMAKE_MINIMUM_REQUIRED(VERSION 2.8)

IF(DEFINED CMAKE_BUILD_TYPE)
  SET(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE} CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ELSE()
  SET(CMAKE_BUILD_TYPE RelWithDebInfo CACHE STRING "Choose the type of build, options are: None(CMAKE_CXX_FLAGS or CMAKE_C_FLAGS used) Debug Release RelWithDebInfo MinSizeRel.")
ENDIF()

INCLUDE (CheckIncludeFileCXX)
INCLUDE (CMakeDependentOption)

PROJECT(canvas)

LIST(APPEND CMAKE_MODULE_PATH
            ${CMAKE_SOURCE_DIR}/cmake/scripts
            ${CMAKE_SOURCE_DIR}/cmake/modules )

# ADD_DEFINITIONS("-Wno-deprecated -Wall -Wextra -Wno-reorder -std=c++0x")
ADD_DEFINITIONS(" -std=c++0x")

OPTION(CANVAS_TESTS "Build C++ tests" OFF)

FIND_PACKAGE(JSONCPP REQUIRED)
FIND_PACKAGE(CURL REQUIRED)

# project version
SET( CANVAS_VERSION_MAJOR 0 )
SET( CANVAS_VERSION_MINOR 2 )
SET( CANVAS_VERSION_PATCH 1 )
SET( CANVAS_VERSION_BUILD "a" )
SET( CANVAS_VERSION "${CANVAS_VERSION_MAJOR}.${CANVAS_VERSION_MINOR}.${CANVAS_VERSION_PATCH}-${CANVAS_VERSION_BUILD}")

SET(LIBRARY_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/lib")
SET(EXECUTABLE_OUTPUT_PATH "${CMAKE_CURRENT_SOURCE_DIR}/bin")

INCLUDE_DIRECTORIES(
  .
  include
  ${CURL_INCLUDE_DIR}
  ${JSONCPP_INCLUDE_DIR})

# The linking is done for tests
LINK_DIRECTORIES(
  ${JSONCPP_LIBRARY_DIRS}
  ${CURL_LIBRARY_DIRS}
)
LINK_LIBRARIES(
  ${JSONCPP_LIBRARIES}
  ${CURL_LIBRARIES}
)

ADD_SUBDIRECTORY(src)

IF (CANVAS_TESTS)
  FIND_PACKAGE(GTest REQUIRED)
  INCLUDE_DIRECTORIES(${GTEST_INCLUDE_DIRS})
  ADD_SUBDIRECTORY(test/unit)
ENDIF()

FILE(GLOB cmake_mods "${CMAKE_CURRENT_SOURCE_DIR}/cmake/modules/*.cmake")
FILE(GLOB cmake_scripts "${CMAKE_CURRENT_SOURCE_DIR}/cmake/scripts/*.cmake")
INSTALL(DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}/include/${PROJECT_NAME} DESTINATION include)
INSTALL(FILES libcanvas-config.cmake DESTINATION lib/${PROJECT_NAME})
INSTALL(FILES ${cmake_mods} DESTINATION lib/${PROJECT_NAME})
INSTALL(FILES ${cmake_scripts} DESTINATION lib/${PROJECT_NAME})
